---
import MetaTags from "../components/html/meta.astro"
import TopBar from '../components/topbar/topbar.astro'
import FooterBar from '../components/footer/footer.astro';
import { Themes } from "../components/ts/enums";

interface Props {
	title: string;
	meta_description: string;
	disable_overflow: "x" | "y" | "xy";
}
const {title, meta_description, disable_overflow} = Astro.props
const enum_light_ptr = Themes.Light
---

<!doctype html>
<html lang="en" data-theme="0">
	<head>
		<MetaTags meta_description={meta_description}/>
		<link rel="icon" type="image/png" href="/favicon.png"/>
		<title>{`rhpidfyre.io | ${title}`}</title>
	</head>
	<body style={disable_overflow === "xy" ? "overflow: hidden" : `overflow-${disable_overflow}: hidden`}>
		<script is:inline define:vars={{enum_light_ptr}}>
			if (window.matchMedia("(prefers-color-scheme: light)").matches) {
				const CssRoot = document.querySelector(":root")
				if (CssRoot) {
					CssRoot.setAttribute("data-theme", enum_light_ptr.toString())
				}
			}
		</script>
		<TopBar/>
		<main class="main-page-content">
			<slot/>
		</main>
		<FooterBar/>
	</body>
</html>

<style lang="scss" is:global>
	@use "../scss/variables.scss";
	@use "../scss/properties.scss";

	[data-theme="0"] {
		@include variables.dark-theme;
	}
	[data-theme="1"] {
		@include variables.light-theme;
	}
	::selection {
		background-color: var(--selection-background-color);
		color: var(--selection-color);
	}
    body {
   		padding: 0;
     	margin: 0;
    	font-family: -apple-system, "Segoe UI", system-ui, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Noto Color Emoji", "Twemoji Mozilla";
    	background-color: var(--color-primary);
        box-sizing: border-box;
    }
	a {
		color: var(--a-link-color);
		text-decoration: none;
		&:visited, &:active, &:link {
			color: var(--a-link-color);
		};
	}
	button {
		cursor: pointer;
	}
    h1, h2, p {
    	padding: 0;
     	margin: 0;
     	text-wrap: balance;
    }
    .main-page-content {
		display: flex;
		width: 100vw;
		height: variables.$main-height;
		justify-content: center;
		align-items: center;
	}
</style>